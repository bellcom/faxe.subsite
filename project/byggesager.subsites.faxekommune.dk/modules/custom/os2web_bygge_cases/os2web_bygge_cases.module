<?php

/**
 * @file
 * Code for the OS2Web Bygge Cases feature.
 */

include_once 'os2web_bygge_cases.features.inc';

/**
 * Implements hook_menu().
 */
function os2web_bygge_cases_menu() {
  $items['admin/config/os2web_bygge_cases'] = array(
    'title' => 'OS2Web Byggecases',
    'description' => 'Configuration for Byggecases',
    'access arguments' => array('administer os2web'),
    'page callback' => 'system_admin_menu_block_page',
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/config/os2web_bygge_cases/settings'] = array(
    'title' => 'OS2Web Byggecases Settings',
    'description' => 'General settings for the OS2Web Byggecases',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('os2web_bygge_cases_settings_form'),
    'access arguments' => array('administer os2web'),
    'type' => MENU_NORMAL_ITEM | MENU_DEFAULT_LOCAL_TASK
  );
  $items['request-bygge-cases/%'] = array(
    'title' => 'Cases request',
    'type' => MENU_CALLBACK,
    'page callback' => 'os2web_bygge_cases_request_cases',
    'access arguments' => array(1),
    'access callback' => 'os2web_bygge_cases_user_can_see_cases_by_address',
    'page arguments' => array(1),
  );
  return $items;
}

function os2web_bygge_cases_settings_form($form, $form_state) {
  $form['os2web_bygge_cases_show_only_buildings_with_cases'] = array(
    '#type' => 'checkbox',
    '#title' => 'Hvis kun bygninger med sager på',
    '#default_value' => variable_get('os2web_bygge_cases_show_only_buildings_with_cases', FALSE),
  );
   $form['os2web_bygge_cases_request_case'] = array(
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#title' => t('Request cases notification email'),
  );
  $form['os2web_bygge_cases_request_case']['os2web_bygge_cases_request_case_email'] = array(
    '#type' => 'textfield',
    '#title' => t('Email'),
    '#default_value' => variable_get('os2web_bygge_cases_request_case_email', ''),
  );
  $form['os2web_bygge_cases_request_case']['os2web_bygge_cases_request_case_subject'] = array(
    '#type' => 'textfield',
    '#title' => t('Subject'),
    '#description' => t('Add subject'),
    '#default_value' => variable_get('os2web_bygge_cases_request_case_subject', ''),
  );
  $form['os2web_bygge_cases_request_case']['os2web_bygge_cases_request_case_body'] = array(
    '#type' => 'textarea',
    '#title' => t('Message'),
    '#description' => t('Add text'),
    '#default_value' => variable_get('os2web_bygge_cases_request_case_body', ''),
  );
  $form['os2web_bygge_cases_request_case']['os2web_bygge_cases_request_case_confirmation_text'] = array(
    '#type' => 'textarea',
    '#title' => t('Thank you text'),
    '#default_value' => variable_get('os2web_bygge_cases_request_case_confirmation_text', ''),
  );
  $form['os2web_bygge_cases_request_case']['os2web_bygge_cases_request_case_email_text_available_variables'] = array(
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    '#value' => t('Can be used both in subject and body:') . '<br/>
    <b>!address</b> - ' . t('Building address') . '<br/>
    <b>!bfe</b> - ' . t('BFE number') . '<br/>
    <b>!name</b> - ' . t('User name') . '<br/>
    <b>!cpr</b> - ' . t('CPR number') . '<br/>',
    '#title' => t('Available variables'),
  );

  return system_settings_form($form);
}

/**
 * Implements hook_node_access().
 */
function os2web_bygge_cases_node_access($node, $op, $account) {
  if ($op == 'view') {
    $type = is_string($node) ? $node : $node->type;
    if ($type == 'os2web_cp_service_cp_case') {

      $field_os2web_cp_service_cpr_nr = field_get_items('node', $node, 'field_os2web_cp_service_pid_nr');
      $field_os2web_cp_service_cvr_nr = field_get_items('node', $node, 'field_os2web_cp_service_cvr_nr');
      if (!empty($field_os2web_cp_service_cpr_nr) && !empty($field_os2web_cp_service_cvr_nr)) {
        $owners_cpr_cvr_nr =array_merge($field_os2web_cp_service_cpr_nr, $field_os2web_cp_service_cvr_nr);
      }
      else {
        $owners_cpr_cvr_nr = !empty($field_os2web_cp_service_cpr_nr) ? $field_os2web_cp_service_cpr_nr : $field_os2web_cp_service_cvr_nr;
      }
      $cpr = os2web_nemlogin_auth_get_value('cpr');
      $cvr = os2web_nemlogin_auth_get_value('cvr');
      $person_nr = is_null($cpr) ? $cvr : $cpr;
      // Doing check only if limit PID are set.
      if (!empty($owners_cpr_cvr_nr)) {

        // CRP/CVR not present, denying access.
        if (!$person_nr) {
          return NODE_ACCESS_DENY;
        }

        // If match is found, not restricting the access.
        foreach ($owners_cpr_cvr_nr as $cpr_nr) {
          if (str_replace('-', '', $cpr_nr['value']) == $person_nr) {
            return NODE_ACCESS_IGNORE;
          }
        }
        // No match is found, denying access.
        return NODE_ACCESS_DENY;
      }
      return NODE_ACCESS_IGNORE;
    }
    elseif ($type == 'os2web_cp_service_cp_document') {
      $case_id = NULL;

      // Letting parent case decide the access permission.
      $field_os2web_cp_service_case_id = field_get_items('node', $node, 'field_os2web_cp_service_case_id');
      if (is_array($field_os2web_cp_service_case_id)) {
        $case_id = $field_os2web_cp_service_case_id[0]['value'];
      }

      if ($case_id) {
        $case = _os2web_cp_service_get_cp_document_node_by_case_id($case_id);
        if ($case) {
          if (!node_access($op, $case, $account)) {
            return NODE_ACCESS_DENY;
          }
        }
      }
    }
  }

  return NODE_ACCESS_IGNORE;
}


function os2web_bygge_cases_user_can_see_case($nid) {
  $case = node_load($nid);
  if (!node_access('view', $case)){
    return FALSE;
  }
  return TRUE;
}

/**
 * Implements hook_preprocess_node().
 */
function os2web_bygge_cases_preprocess_node(&$variables) {
  if ($variables['type'] == 'os2web_cp_service_cp_case') {
    $variables['content']['#cp_case_documents'] = views_embed_view('os2web_cp_service_cp_case_view', 'attachment_1', $variables['nid']);
  }
}

function os2web_bygge_cases_user_can_see_cases_by_address($tid) {
  global $user;
  $bfe_numbers = os2web_nemlogin_auth_get_value('bfe_numbers');
  $term = taxonomy_term_load($tid);
  if ($user->uid == 1) {
    return TRUE;
  }
  if (isset($term->field_cp_service_tax_addr_bfe_nr[LANGUAGE_NONE]) && in_array($term->field_cp_service_tax_addr_bfe_nr[LANGUAGE_NONE][0]['value'], $bfe_numbers)){
    return TRUE;
  }
  return FALSE;
}

/**
 * Implements hook_views_pre_render().
 */
function os2web_bygge_cases_views_pre_render(&$view) {
  if ($view->name == 'os2web_bygge_case_cases' && $view->current_display == 'bygge_cases') {
    $args = arg();
    $term = taxonomy_term_load($args[1]);
    $view->build_info['title'] = t('Byggesager på %address', array('%address' => $term->name));
  }
  if ($view->name == 'os2web_bygge_cases_by_adresses' && $view->current_display === 'page' && !variable_get('os2web_bygge_cases_show_only_buildings_with_cases', FALSE)) {
    $view->style_plugin->render_fields($view->result);
    foreach ($view->style_plugin->rendered_fields as $index => &$rendered_result) {
      if (isset($view->result[$index]->field_os2web_cp_service_addr_taxonomy_term_data_nid) && (int)$view->result[$index]->field_os2web_cp_service_addr_taxonomy_term_data_nid === 0 ) {
        $rendered_result['name'] = '<a href = "/bygge-cases/' . $view->result[$index]->tid . '" class ="inactive-link">' . $view->result[$index]->taxonomy_term_data_name . '</a>'
          .'<a href = "/request-bygge-cases/' . $view->result[$index]->tid . '" class ="case-request-link">' . t('Request cases') . '</a>';
      }
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 */
function os2web_bygge_cases_init() {
  if (module_exists('nemlogin') && module_exists(os2web_datafordeler_intergation) && !variable_get('os2web_bygge_cases_show_only_buildings_with_cases', FALSE)) {
   $nemlogin_object = nemlogin_get_plugin_object();
   if ($nemlogin_object->isAuthenticated()) {
     $bfe_numbers = !empty($nemlogin_object) ? $nemlogin_object->fetchValue('bfe_numbers') : NULL;
      if (isset($bfe_numbers) && !empty($bfe_numbers)) {
        $addresses_vocabulary = taxonomy_vocabulary_machine_name_load('os2web_cp_service_tax_addresses');
        foreach ($bfe_numbers as $bfe) {
          $query = new EntityFieldQuery();
          $results = $query
            ->entityCondition('entity_type', 'taxonomy_term')
            ->entityCondition('bundle', 'os2web_cp_service_tax_addresses')
            ->fieldCondition('field_cp_service_tax_addr_bfe_nr', 'value', $bfe)
            ->execute();
          if (empty($results['taxonomy_term'])) {
            $address = os2web_datafordeler_intergation_fetch_address($bfe);
            if (!empty($address)) {
              $term = new stdClass();
              $term->vid = $addresses_vocabulary->vid;
              $term->name = $address;
              $term->field_cp_service_tax_addr_bfe_nr[LANGUAGE_NONE][0]['value'] = $bfe;
              taxonomy_term_save($term);
            }
          }
        }
      }
   }
  }
}

/**
 * Implements hook_views_query_alter().
 */
function os2web_bygge_cases_views_query_alter(&$view, &$query) {
  if (variable_get('os2web_bygge_cases_show_only_buildings_with_cases', FALSE) && $view->name == 'os2web_bygge_cases_by_adresses' && $view->current_display === 'page') {
    // Traverse through the 'where' part of the query.
    foreach ($query->having as &$condition_group) {
      foreach ($condition_group['conditions'] as &$condition) {
        // Replace the condition for field
        // 'field_data_field_os2web_cp_service_pid_nr'.
        if (is_string($condition['field']) && $condition['field'] == 'COUNT(field_os2web_cp_service_addr_taxonomy_term_data.nid) >= :node_nid') {
           $condition['value'] = array(':node_nid' => '1');
       }
      }
    }
  }
}

/*
 * Helper function to send request about missing cases to site admin
 */
function os2web_bygge_cases_request_cases($tid) {
  $term = taxonomy_term_load($tid);
  $title = t('Cases were requested for ') . $term->name;
  drupal_set_title($title);
  $name = os2web_nemlogin_auth_get_value('name');
  $cpr = os2web_nemlogin_auth_get_value('cpr');
  $cvr = os2web_nemlogin_auth_get_value('cvr');
  $person_nr = is_null($cpr) ? $cvr : $cpr;
  $bfe_field_items = field_get_items('taxonomy_term', $term, 'field_cp_service_tax_addr_bfe_nr');
  $bfe = $bfe_field_items[0]['value'];
  $to = variable_get('os2web_bygge_cases_request_case_email', '');
  $subject = variable_get('os2web_bygge_cases_request_case_subject', '');
  $body = variable_get('os2web_bygge_cases_request_case_body', '');
  $thank_you_text = variable_get('os2web_bygge_cases_request_case_confirmation_text', '');
  $search = array(
   '!address',
   '!name',
   '!bfe',
   '!cpr',
   PHP_EOL,
  );
  $replace = array(
    $term->name,
    $name,
    $bfe,
    $person_nr,
    '<br/>',
  );
  $subject = str_replace($search, $replace, $subject);
  $subject = ucfirst($subject);
  $body = str_replace($search, $replace, $body);
  $body = utf8_encode(ucfirst($body));
  $thank_you_text = str_replace($search, $replace, $thank_you_text);
  $from = variable_get('site_mail');
    $params = array(
      'subject' => $subject,
      'body' => $body,
        );
  drupal_mail('os2web_bygge_cases', 'case_request', $to, language_default(), $params, $from);
  return $thank_you_text;

}

/*
 * Implements hook_mail.
 */
function os2web_bygge_cases_mail($key, &$message, $params) {
  $message['subject'] = $params['subject'];
  $message['body'][] = $params['body'];
}

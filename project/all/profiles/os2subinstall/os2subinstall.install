<?php

/**
 * Implements hook_install_tasks().
 */
function _project_profile_install_tasks(&$task) {
  // This is where you define tasks

  $task['project_local_settings'] = array(
    'display_name' => t('Project - local settings'),
    'display' => TRUE,
    'run' => INSTALL_TASK_RUN_IF_NOT_COMPLETED,
    'function' => '_project_profile_install_tasks__local_settings',
  );
  
}

/**
 * Implements hook_install().
 */
function _project_profile_install() {
  // This is where you define settings
  module_enable(array('os2web_base', 'subsites_urls','os2web_spotbox', 'os2sub_banner','os2web_aaa_index', 'os2web_contact', 'os2sub_frontpage', 'os2sub_uses_and_tools'));
}



/**
 * Implements hook_install().
 *
 * These tasks run after install.
 */

function _project_profile_install_tasks__local_settings() {

  // Create a default role for site administrators, with all available permissions assigned.
  $admin_role = new stdClass();
  $admin_role->name = 'subsiteadmin';
  $admin_role->weight = 2;
  user_role_save($admin_role);
  user_role_grant_permissions($admin_role->rid, array_keys(module_invoke_all('permission')));
  // Set this as the administrator role.
  variable_set('user_admin_role', $admin_role->rid);

  // Assign user 1 the "administrator" role.
  db_insert('users_roles')
    ->fields(array('uid' => 1, 'rid' => $admin_role->rid))
    ->execute();

  theme_enable(array('adminimal', 'subsite'));
  theme_disable(array('bartik', 'rubik', 'seven'));
  variable_set('theme_default', 'subsite');
  variable_set('admin_theme', 'adminimal');
  variable_set('site_frontpage', 'forside');

  // Set admin theme on node/edit and node/add
  variable_set('node_admin_theme', '1');
  module_disable(array('update'));
  

  // Set default TZ.
  variable_set('date_default_timezone', "Europe/Copenhagen");
  variable_set('date_first_day', "1");
  variable_set('configurable_timezones', "0");
  variable_set('site_default_country', "DK");

  // jQuery update module.
  variable_set('jquery_update_compression_type', 'min');
  variable_set('jquery_update_jquery_admin_version', '1.8');
  variable_set('jquery_update_jquery_cdn', 'none');
  variable_set('jquery_update_jquery_migrate_plugin_cdn', 'none');
  variable_set('jquery_update_jquery_migrate_plugin_enable', 0);
  variable_set('jquery_update_jquery_migrate_plugin_migrate_trace', 1);
  variable_set('jquery_update_jquery_migrate_plugin_migrate_warnings', 1);
  variable_set('jquery_update_jquery_version', '1.9');

  // Set default language.
  $langs = language_list();
  variable_set('language_default', $langs['da']);

  // Disable english.
  db_update("languages")
    ->fields(array("enabled" => 0))
    ->condition("language", "en")
    ->execute();
    
  // News category is just a single term.
  /*
  $vocab = taxonomy_vocabulary_machine_name_load('os2web_news_page_newstypes');
  $category = new StdClass();
  $category->vid = $vocab->vid;
  $category->name = 'Nyheder';
  taxonomy_term_save($category);

  $vocab = taxonomy_vocabulary_machine_name_load('os2web_taxonomies_tax_kle');

  $file_path = DRUPAL_ROOT . '/' . drupal_get_path('module', 'os2web_taxonomies') . '/data/kle.xml';

  $xml = simplexml_load_file($file_path);

  foreach ($xml as $row) {
    drupal_static_reset();
    $term = new StdClass();
    $term->vid = $vocab->vid;
    $term->name = $row->Key . ' ' . $row->Name;
    $term->description[LANGUAGE_NONE][0]['value'] = $row->Description;

    if ($row->Tag['TagTypeSqlID'] && $type = reset($row->Tag['TagTypeSqlID'])) {
      switch ($type) {
        case 2:
            $term->field_os2web_taxonomies_legi_ref[LANGUAGE_NONE][0]['url'] = $row->Tag->Value;
            $term->field_os2web_taxonomies_legi_ref[LANGUAGE_NONE][0]['title'] = $row->Tag->Key;
          break;

        case 3:
          $term->field_os2web_taxonomies_search[LANGUAGE_NONE][0]['value'] = $row->Tag->Key;
          break;

        case 4:
          $term->field_os2web_taxonomies_cue_word[LANGUAGE_NONE][0]['value'] = $row->Tag->Key;
          break;
      }
    }

    taxonomy_term_save($term);
  }
  */
}
